{
    "swagger": "2.0",
    "info": {
        "description": "This api witll generate sencer data related to fish.",
        "title": "Sensor data service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/data_generation": {
            "post": {
                "description": "It will save data  in DB for temparature, fish, cordinates etc",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data generation face"
                ],
                "summary": "Generate data for groups and sensors API-2",
                "responses": {}
            }
        },
        "/data_list": {
            "post": {
                "description": "It will display whole data in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "show full data available in DB API-General",
                "responses": {}
            }
        },
        "/group/species/top/{codeName}/{N}": {
            "post": {
                "description": "show top count of fish in a group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "show top count of fish in a group optionaly supports duration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Name",
                        "name": "codeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max Count of fish you want to see",
                        "name": "N",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Unix timestamp for from of duration",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Unix timestamp for till of duration",
                        "name": "till",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/group/species/{groupName}": {
            "post": {
                "description": "shows all species in agroup that is name and count of fishes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "shows all species in agroup ex:alpha",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name as alpha",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/group/temperature/average/{groupName}": {
            "post": {
                "description": "It will display temperature of a groups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "show average temperature in a group API-3.1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "generate avg temperature by group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/group/transparency/average/{groupName}": {
            "post": {
                "description": "It will display transparency of a groups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "show average transparency in a group API-3.1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "generate avg transparency by group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/group_sensor_generation": {
            "post": {
                "description": "It will save data of group and sensors name in DataBase",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kicke-off phase"
                ],
                "summary": "Generate groups and sensors name API-1",
                "responses": {}
            }
        },
        "/region/temperature/max": {
            "post": {
                "description": "show maximum temprature in a min and max:x,y,z reason",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "show maximum temprature in a reason",
                "parameters": [
                    {
                        "type": "integer",
                        "description": " x min cordinate",
                        "name": "xMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " x max cordinate",
                        "name": "xMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " y min cordinate",
                        "name": "yMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " y max cordinate",
                        "name": "yMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " z min cordinate",
                        "name": "zMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " z max cordinate",
                        "name": "zMax",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/region/temperature/min": {
            "post": {
                "description": "show minimum temprature in a min and max:x,y,z  reason",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "show minimum temprature in a reason",
                "parameters": [
                    {
                        "type": "integer",
                        "description": " x min cordinate",
                        "name": "xMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " x max cordinate",
                        "name": "xMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " y min cordinate",
                        "name": "yMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " y max cordinate",
                        "name": "yMax",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " z min cordinate",
                        "name": "zMin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": " z max cordinate",
                        "name": "zMax",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/sensor/average/temperature/{codeName}": {
            "post": {
                "description": "Display the average temperature of a CodeName within a specified duration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aggregate statistics"
                ],
                "summary": "Show average temperature in a CodeName, e.g., alpha 1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sensor CodeName",
                        "name": "codeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Unix timestamp for from of duration",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Unix timestamp for till of duration",
                        "name": "till",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    }
}